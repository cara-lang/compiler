module Prelude {

  // TODO make compiler depend on this?
  not : Bool -> Bool
  not(True) = False
  not(False) = True

  /* TODO
  // TODO << for functions?
  // TODO >> for functions?

  `..` : Int -> Seq[Int]
  `..`(n) = Seq.numbersFrom(n)
  */

  applyNTimes : Int -> (a -> a) -> a -> a
  applyNTimes(0,_,value) = value
  applyNTimes(n,fn,value) = applyNTimes(n-1,fn,fn(value))

}
